unit BrickCamp.Model.TAnswer;

interface

uses
  Spring,
  Spring.Persistence.Mapping.Attributes,
  BrickCamp.Model.IProduct;

type
  [Entity]
  [Table('ANSWER')]
  TAnswer = class
  private
    [Column('ID', [cpRequired, cpPrimaryKey, cpNotNull, cpDontInsert], 0, 0, 0, 'primary key')]
    [AutoGenerated]
    FId: Integer;
  private
    FQuestionId: Integer;
    FUserId: Integer;
    FText: string;
    FRankIndex: SmallInt;

    function GetId: Integer;
    function GetQuestionId: Integer;
    function GetUserId: Integer;
    function GetText: string;
    function GetRankIndex: SmallInt;
    procedure SetQuestionId(const Value: Integer);
    procedure SetUserId(const Value: Integer);
    procedure SetText(const Value: string);
    procedure SetRankIndex(const Value: SmallInt);
  public
    constructor Create(const Id: integer); reintroduce;

    property ID: Integer read GetId;

    [Column('QUESTION_ID', [cpNotNull])]
    property QuestionId: Integer read GetQuestionId write SetQuestionId;
    [Column('CUSER_ID', [cpNotNull])]
    property UserId: Integer read GetUserId write SetUserId;
    [Column('TEXT', [cpNotNull])]
    property Text: string read GetText write SetText;
    [Column('RANKIDX')]
    property RankIndex: SmallInt read GetRankIndex write SetRankIndex;
  end;

implementation

{ TEmployee }

constructor TAnswer.Create(const Id: integer);
begin
  FId := Id;
end;

function TAnswer.GetId: Integer;
begin
  Result := FId;
end;

function TAnswer.GetQuestionId: Integer;
begin
  Result := FQuestionId;
end;

function TAnswer.GetRankIndex: SmallInt;
begin
  Result := FRankIndex;
end;

function TAnswer.GetText: string;
begin
  Result := FText;
end;

function TAnswer.GetUserId: Integer;
begin
  Result := FUserId;
end;

procedure TAnswer.SetQuestionId(const Value: Integer);
begin
  FQuestionId := Value;
end;

procedure TAnswer.SetRankIndex(const Value: SmallInt);
begin
  FRankIndex := Value;
end;

procedure TAnswer.SetText(const Value: string);
begin
  FText := Value;
end;

procedure TAnswer.SetUserId(const Value: Integer);
begin
  FUserId := Value;
end;

end.

