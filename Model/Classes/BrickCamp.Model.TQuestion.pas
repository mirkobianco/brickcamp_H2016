unit BrickCamp.Model.TQuestion;

interface

uses
  Spring,
  Spring.Persistence.Mapping.Attributes,
  BrickCamp.Model.IProduct;

type
  [Entity]
  [Table('QUESTION')]
  TQuestion = class
  private
    [Column('ID', [cpRequired, cpPrimaryKey, cpNotNull, cpDontInsert], 0, 0, 0, 'primary key')]
    [AutoGenerated]
    FId: Integer;
  private
    FProductId: Integer;
    FUserId: Integer;
    FText: string;
    FIsOpen: SmallInt;

    function GetId: Integer;
    function GetProductId: Integer;
    function GetUserId: Integer;
    function GetText: string;
    function GetIsOpen: SmallInt;
    procedure SetProductId(const Value: Integer);
    procedure SetUserId(const Value: Integer);
    procedure SetText(const Value: string);
    procedure SetIsOpen(const Value: SmallInt);
  public
    constructor Create; overload;
    constructor Create(const Id: integer); overload;

    property ID: Integer read GetId;

    [Column('PRODUCT_ID', [cpNotNull])]
    property ProductId: Integer read GetProductId write SetProductId;
    [Column('CUSER_ID', [cpNotNull])]
    property UserId: Integer read GetUserId write SetUserId;
    [Column('TEXT', [cpNotNull])]
    property Text: string read GetText write SetText;
    [Column('ISOPEN')]
    property IsOpen: SmallInt read GetIsOpen write SetIsOpen;
  end;

implementation

{ TEmployee }

constructor TQuestion.Create(const Id: integer);
begin
  FId := Id;
end;

constructor TQuestion.Create;
begin

end;

function TQuestion.GetId: Integer;
begin
  Result := FId;
end;

function TQuestion.GetProductId: Integer;
begin
  Result := FProductId;
end;

function TQuestion.GetIsOpen: SmallInt;
begin
  Result := FIsOpen;
end;

function TQuestion.GetText: string;
begin
  Result := FText;
end;

function TQuestion.GetUserId: Integer;
begin
  Result := FUserId;
end;

procedure TQuestion.SetProductId(const Value: Integer);
begin
  FProductId := Value;
end;

procedure TQuestion.SetIsOpen(const Value: SmallInt);
begin
  FIsOpen := Value;
end;

procedure TQuestion.SetText(const Value: string);
begin
  FText := Value;
end;

procedure TQuestion.SetUserId(const Value: Integer);
begin
  FUserId := Value;
end;

end.

